# .NET / C#
*.dll
*.exe
*.pdb
*.so
*.dylib
*.ncb
*.sdf
*.suo
*.vcproj.*.user
*.vcxproj.user
*.vcxproj.filters
*.vcxproj
*.sln.docstates
*.userprefs
*.pidb
*.csproj.user
*.exe.manifest
*.exe.config
*.Cache
*.cachefile
*.VC.db
*.VC.VC.opendb
*.psess
*.vsp
*.vspx

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
[Ll]og/
[Ll]ogs/

# Visual Studio
.vs/
*.user
*.userosscache
*.sln.docstates
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Entity Framework
*.edmx.diagram
*.edmx.sql

# Package Files
*.nupkg
*.snupkg
*.nuget.props
*.nuget.targets
packages/

# Node.js / React
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
.npm
.eslintcache
.stylelintcache

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# Build directories
build/
dist/

# React / Create React App
.env.local
.env.development.local
.env.test.local
.env.production.local

# Relay Generated Files - IMPORTANT!
**/src/__generated__/
**/__generated__/
*.graphql.js

# Docker
.dockerignore

# Database files
*.db
*.sqlite
*.sqlite3
*.db-shm
*.db-wal

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
*.swp
*.swo
*~

# Temporary files
*.tmp
*.temp

# Logs
logs
*.log

# Environment variables
.env

# JetBrains
.idea/
*.sln.iml

# Windows
*.lnk

**Why These Topics**:
- **Technology Stack**: react, dotnet, graphql, docker
- **Specific Versions**: react19, dotnet9  
- **Architecture**: clean-architecture, full-stack
- **Tools**: relay, bootstrap, nginx
- **Use Case**: todo-app, spa
- **Deployment**: docker-compose, containerization

## üìù GitHub Repository Settings

### Repository Configuration
```yaml
Repository Type: Public
License: MIT License (recommended for open source)
Include README: ‚úÖ (Already created)
Include .gitignore: ‚úÖ (Create comprehensive)
Include License: ‚úÖ (MIT or Apache 2.0)
```

### Branch Protection (Optional but Recommended)
- Main branch protection
- Require pull request reviews
- Require status checks
- Automatic deletion of head branches

## üîç SEO Optimization Files

### 1. Enhanced .gitignore
<function_calls>
<invoke name="create_file">
<parameter name="content"># Dependencies
node_modules/
*/node_modules/

# Production builds
build/
dist/
*/build/
*/dist/

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# .NET
bin/
obj/
*.user
*.suo
*.cache
*.dll
*.pdb
*.exe

# Database
*.db
*.sqlite
*.sqlite3

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Docker
.dockerignore

# Coverage directory used by tools like istanbul
coverage/

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# Mac files
.DS_Store

# Windows files
Thumbs.db
ehthumbs.db
Desktop.ini

# Visual Studio files
.vs/
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# JetBrains Rider
.idea/
